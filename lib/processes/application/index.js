// Generated by CoffeeScript 1.8.0
var NO_LAUNCH_COMMAND_ERROR, async, debug, defaults, findOpenPort, getLaunchCommand, readPackageJson, spawnApplication, spawnServer;

async = require('async');

readPackageJson = require('read-package-json');

debug = require('debug')('testium:processes:application');

defaults = require('lodash').defaults;

spawnServer = require('../server').spawnServer;

findOpenPort = require('../port').findOpenPort;

NO_LAUNCH_COMMAND_ERROR = 'Not launch command found, please add scripts.start to package.json';

getLaunchCommand = function(config, callback) {
  var pkgJsonPath;
  if (config.launchCommand) {
    return callback(null, config.launchCommand);
  }
  debug('Trying to use package.json:scripts.start');
  pkgJsonPath = "" + config.appDirectory + "/package.json";
  return readPackageJson(pkgJsonPath, function(error, pkgJson) {
    var _ref, _ref1;
    if (error != null) {
      return callback(error);
    }
    debug('Loaded from package json', (_ref = pkgJson.scripts) != null ? _ref.start : void 0);
    if (!((_ref1 = pkgJson.scripts) != null ? _ref1.start : void 0)) {
      return cb(new Error(NO_LAUNCH_COMMAND_ERROR));
    }
    return callback(null, pkgJson.scripts.start);
  });
};

spawnApplication = function(config, callback) {
  var launch, port, timeout;
  launch = config.launch, timeout = config.launchTimeout, port = config.appPort;
  if (!launch) {
    return callback();
  }
  return getLaunchCommand(config, function(error, launchCommand) {
    var args, cmd, env, opts;
    if (error) {
      return callback(error);
    }
    args = launchCommand.split(/[\s]+/g);
    cmd = args.shift();
    debug('Launching application', cmd, args);
    env = defaults({
      NODE_ENV: 'test',
      PORT: port
    }, process.env);
    opts = {
      port: port,
      env: env,
      timeout: timeout
    };
    return spawnServer('application', cmd, args, opts, function(error, app) {
      if (error != null) {
        return callback(error);
      }
      return callback(null, app);
    });
  });
};

module.exports = spawnApplication;
