// Generated by CoffeeScript 1.8.0
var async, debug, extend, initProcesses, spawn, spawnApplication, spawnPhantom, spawnProxy;

spawn = require('child_process').spawn;

async = require('async');

extend = require('lodash').extend;

debug = require('debug')('testium:processes');

spawnProxy = require('./proxy');

spawnPhantom = require('./phantom');

spawnApplication = require('./application');

initProcesses = function() {
  var cached;
  cached = null;
  return {
    ensureRunning: function(config, callback) {
      if (cached != null) {
        debug('Returning cached processes');
        return process.nextTick(function() {
          return callback(cached.error, cached.results);
        });
      }
      debug('Launching processes');
      return async.auto({
        proxy: function(done) {
          return spawnProxy(config, done);
        },
        phantom: function(done) {
          return spawnPhantom(config, done);
        },
        application: function(done) {
          return spawnApplication(config, done);
        }
      }, function(error, results) {
        cached = {
          error: error,
          results: results
        };
        return callback(error, results);
      });
    }
  };
};

module.exports = extend(initProcesses, {
  spawnPhantom: spawnPhantom,
  spawnProxy: spawnProxy,
  spawnApplication: spawnApplication
});
